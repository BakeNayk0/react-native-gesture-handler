"use strict";(self.webpackChunkreact_native_gesture_handler_docs=self.webpackChunkreact_native_gesture_handler_docs||[]).push([[4638],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(r),v=a,f=u["".concat(s,".").concat(v)]||u[v]||d[v]||i;return r?n.createElement(f,o(o({ref:t},l),{},{components:r})):n.createElement(f,o({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=v;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:a,o[1]=p;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},1896:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var n=r(3117),a=(r(7294),r(3905));const i={id:"create-native-wrapper",title:"createNativeWrapper",sidebar_label:"createNativeWrapper()"},o=void 0,p={unversionedId:"api/gesture-handlers/create-native-wrapper",id:"version-1.x/api/gesture-handlers/create-native-wrapper",title:"createNativeWrapper",description:"Creates provided component with NativeViewGestureHandler, allowing it to be part of RNGH's",source:"@site/versioned_docs/version-1.x/api/gesture-handlers/create-native-wrapper.md",sourceDirName:"api/gesture-handlers",slug:"/api/gesture-handlers/create-native-wrapper",permalink:"/react-native-gesture-handler/docs/1.x/api/gesture-handlers/create-native-wrapper",draft:!1,editUrl:"https://github.com/software-mansion/react-native-gesture-handler/edit/main/docs/versioned_docs/version-1.x/api/gesture-handlers/create-native-wrapper.md",tags:[],version:"1.x",frontMatter:{id:"create-native-wrapper",title:"createNativeWrapper",sidebar_label:"createNativeWrapper()"},sidebar:"version-1.x/docs",previous:{title:"NativeView",permalink:"/react-native-gesture-handler/docs/1.x/api/gesture-handlers/nativeview-gh"},next:{title:"Buttons",permalink:"/react-native-gesture-handler/docs/1.x/api/components/buttons"}},s={},c=[{value:"Arguments",id:"arguments",level:2},{value:"Component",id:"component",level:3},{value:"config",id:"config",level:3},{value:"Returns",id:"returns",level:2}],l={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Creates provided component with NativeViewGestureHandler, allowing it to be part of RNGH's\ngesture system."),(0,a.kt)("h2",{id:"arguments"},"Arguments"),(0,a.kt)("h3",{id:"component"},"Component"),(0,a.kt)("p",null,"The component we want to wrap."),(0,a.kt)("h3",{id:"config"},"config"),(0,a.kt)("p",null,"Config is an object with properties that can be used on ",(0,a.kt)("a",{parentName:"p",href:"/react-native-gesture-handler/docs/1.x/api/gesture-handlers/nativeview-gh"},(0,a.kt)("inlineCode",{parentName:"a"},"NativeViewGestureHandler"))),(0,a.kt)("h2",{id:"returns"},"Returns"),(0,a.kt)("p",null,"Wrapped component."))}d.isMDXComponent=!0}}]);